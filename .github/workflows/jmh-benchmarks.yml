jobs:
  matrix:
    outputs:
      foundlabel: ${{ steps.set-matrix.outputs.foundlabel }}
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref }}
        repository: ${{ github.event.inputs.repo }}
    - continue-on-error: true
      id: set-matrix
      run: 'matrix=$(echo ''[${{ github.event.inputs.benchmarks }}]'' | jq ''.[] |
        select(endswith("Benchmark")) | .'')

        matrix=$(echo $matrix | sed ''s/ /,/g'' | sed ''s/"/\"/g'')

        echo "matrix=[$matrix]" >> $GITHUB_OUTPUT

        echo "foundlabel=$(echo "[$matrix]" | jq ''if . | length > 0 then true else
        false end'')" >> $GITHUB_OUTPUT

        '
  run-benchmark:
    env:
      SPARK_LOCAL_IP: localhost
    if: ${{ needs.matrix.outputs.foundlabel == 'true' }}
    needs: matrix
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.ref }}
        repository: ${{ github.event.inputs.repo }}
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        distribution: zulu
        java-version: 11
    - continue-on-error: true
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties')
          }}
        path: '~/.gradle/caches

          ~/.gradle/wrapper

          '
        restore-keys: ${{ runner.os }}-gradle-
    - continue-on-error: true
      run: echo -e "$(ip addr show eth0 | grep "inet\b" | awk '{print $2}' | cut -d/
        -f1)\t$(hostname -f) $(hostname -s)" | sudo tee -a /etc/hosts
    - continue-on-error: true
      name: Run Benchmark
      run: ./gradlew :iceberg-spark:${{ github.event.inputs.spark_version }}:jmh -PjmhIncludeRegex=${{
        matrix.benchmark }} -PjmhOutputPath=benchmark/${{ matrix.benchmark }}.txt
    - continue-on-error: true
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: benchmark-results
        path: '**/benchmark/*.txt

          '
    strategy:
      fail-fast: false
      matrix:
        benchmark: ${{ fromJson(needs.matrix.outputs.matrix) }}
  show-matrix:
    needs: matrix
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      run: 'echo "Repo: ${{ github.event.inputs.repo }}"

        echo "Ref: ${{ github.event.inputs.ref }}"

        echo "Benchmarks: ${{ needs.matrix.outputs.matrix }}"

        echo "Spark Project Version: ${{ needs.matrix.outputs.spark_version }}"

        echo "Found Benchmarks? ${{ needs.matrix.outputs.foundlabel }}"

        '
name: JMH Benchmarks
on:
  repository_dispatch:
    types: trigger-ga___jmh-benchmarks.yml
